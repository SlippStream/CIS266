MCTF
1. B
2. A
3. A
4. D
5. C
6. D
7. A
8. B
9. A
10. B
11. C
12. C
13. B
14. B
15. FALSE
16. TRUE
17. TRUE
18. TRUE
19. FALSE
20. FALSE

FTE
1. ifs and elses are null statements if followed by semicolons
2. = is the assignment operator
3. Multiple lines of codes must be in braces
4. switch statements only work on equality
5. not x negates an integer variable.
6. it uses || and not &&
7. It uses && and not ||
8. the : and ? are switched
9. .equals() is case-sensitive

AW
1. if (x==y)
2. if (y == 10) x=0;
else x=1;
3. if (seat >= 1 && seat <= 50) category = "Silver";
else if (seat >= 1 && seat <= 100) category = "Gold";
else if (seat >= 1 && seat <= 120) category = "Platinum";
4. if (shift.equals("DAY")) wage_rate = 150;
else if (shift.equality("NIGHT")) wage_rate = 300;
5. if (amount1 > 10 && amount2 < 100) {
    if (amount1 > amount2) System.out.println(amount1);
    else System.out.println(amount2);
}
6. if (grade <= 100 && grade >= 0) System.out.println("The number is valid");
7. if (temperature >= -50 && temperature <= 150) System.out.println("The number is valid");
8. if (hours < 0 || hours > 80) System.out.println("The number is not valid");
9. if (title1.stringCompare(title2) < 0) System.out.println(title1 + " " + title2);
else System.out.println(title2 + " " + title1);
10. switch (choice) {
    case 1:
    System.out.println("You selected 1.");
    break;
    case 2:
    case 3:
    System.out.println("You selected 2 or 3.");
    break;
    case 4:
    System.out.println("You selected 4.");
    break;
    default:
    System.out.println("Select again please.");
}
11. C, A, B
12. "00000.000"
13. "#,###.00"
14. if (numCalls < 101) {callRate = 0.90;}
else if (numCalls < 501) {callRate = 0.60;}
else callRate = 0.30;

SA
1. Statements that only get run when certain conditions are met.
2. It can invalidate blocks of code by creating null statements.
3. To increase readibility.
4. It may not evaluate the strings as intended.
5. A variable that indicates a condition in the code. Boolean.
6. None of the code executing and variables becoming stale.
7. If the first condition is fale with AND or true with OR, the second condition is skipped, speeding up execution.
8. You may not want the second block to always be executed if the first is false.
9. # will only display if there's data to display, 0 will display 0 if there's no data, or the proper character otherwise.
10. By breaking up reused or complicated blocks of code.